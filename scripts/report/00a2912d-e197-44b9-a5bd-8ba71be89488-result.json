{"name": "test_mp_article[test00001-有大有小的芒果快来吃-操作成功]", "status": "broken", "statusDetails": {"message": "TypeError: not all arguments converted during string formatting", "trace": "self = <scripts.test02_mp_article.TestMpArticle object at 0x03EEA448>\ntitle = 'test00001', content = '有大有小的芒果快来吃', expect = '操作成功'\n\n    @pytest.mark.parametrize(\"title,content,expect\",read_yaml(\"mp_article.yaml\"))\n    def test_mp_article(self,title,content,expect):\n        # 调用发布文章业务\n        self.mp_article.page_mp_publish_article(title,content)\n        #       #获取结果信息\n        info = self.mp_article.page_get_info()\n        print(\"文章发布结果：\",info)\n        # 断言\n        try:\n>           assert info == expect\nE           AssertionError: assert None == '操作成功'\n\ntest02_mp_article.py:38: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <scripts.test02_mp_article.TestMpArticle object at 0x03EEA448>\ntitle = 'test00001', content = '有大有小的芒果快来吃', expect = '操作成功'\n\n    @pytest.mark.parametrize(\"title,content,expect\",read_yaml(\"mp_article.yaml\"))\n    def test_mp_article(self,title,content,expect):\n        # 调用发布文章业务\n        self.mp_article.page_mp_publish_article(title,content)\n        #       #获取结果信息\n        info = self.mp_article.page_get_info()\n        print(\"文章发布结果：\",info)\n        # 断言\n        try:\n            assert info == expect\n        except Exception as e:\n>           log.error(\"发布文章错误原因\",e)\n\ntest02_mp_article.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nE:\\Users\\LXZ\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\logging\\__init__.py:1463: in error\n    self._log(ERROR, msg, args, **kwargs)\nE:\\Users\\LXZ\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\logging\\__init__.py:1577: in _log\n    self.handle(record)\nE:\\Users\\LXZ\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\logging\\__init__.py:1587: in handle\n    self.callHandlers(record)\nE:\\Users\\LXZ\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\logging\\__init__.py:1649: in callHandlers\n    hdlr.handle(record)\nE:\\Users\\LXZ\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\logging\\__init__.py:950: in handle\n    self.emit(record)\nE:\\Users\\LXZ\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\_pytest\\logging.py:331: in emit\n    super().emit(record)\nE:\\Users\\LXZ\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\logging\\__init__.py:1089: in emit\n    self.handleError(record)\nE:\\Users\\LXZ\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\logging\\__init__.py:1081: in emit\n    msg = self.format(record)\nE:\\Users\\LXZ\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\logging\\__init__.py:925: in format\n    return fmt.format(record)\nE:\\Users\\LXZ\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\_pytest\\logging.py:92: in format\n    return super().format(record)\nE:\\Users\\LXZ\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\logging\\__init__.py:664: in format\n    record.message = record.getMessage()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <LogRecord: root, 40, D:\\F盘的数据\\PycharmProjects\\import_project\\uiAutoTestBoke\\scripts\\test02_mp_article.py, 40, \"发布文章错误原因\">\n\n    def getMessage(self):\n        \"\"\"\n        Return the message for this LogRecord.\n    \n        Return the message for this LogRecord after merging any user-supplied\n        arguments with the message.\n        \"\"\"\n        msg = str(self.msg)\n        if self.args:\n>           msg = msg % self.args\nE           TypeError: not all arguments converted during string formatting\n\nE:\\Users\\LXZ\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\logging\\__init__.py:369: TypeError"}, "attachments": [{"name": "log", "source": "f59ebc56-56e7-468f-844d-b8504271d079-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "title", "value": "'test00001'"}, {"name": "content", "value": "'有大有小的芒果快来吃'"}, {"name": "expect", "value": "'操作成功'"}], "start": 1616308777707, "stop": 1616308799216, "uuid": "3a6c0c11-d4d8-43a6-ba97-834e2412f663", "historyId": "0b1c147330077b846086dc82d63d5882", "testCaseId": "64196c9c705403acf80282af53eedc5f", "fullName": "scripts.test02_mp_article.TestMpArticle#test_mp_article", "labels": [{"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test02_mp_article"}, {"name": "subSuite", "value": "TestMpArticle"}, {"name": "host", "value": "LAPTOP-PHNSP5RJ"}, {"name": "thread", "value": "24276-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test02_mp_article"}]}