{"name": "test_mp_login[buyer-123456-buyers]", "status": "broken", "statusDetails": {"message": "ValueError: stat: embedded null character in path", "trace": "self = <scripts.test01_mp_login.TestMpLogin object at 0x040D3748>, username = 'buyer', code = '123456', expect = 'buyers'\n\n    @pytest.mark.parametrize(\"username,code,expect\", read_yaml(\"mp_login.yaml\"))\n    def test_mp_login(self, username, code, expect):\n        # 调用登录方法\n        self.mp.page_mp_login(username, code)\n        # 断言\n        sleep(3)  # 解决 还未跳转到成功页面，获取昵称错误的问题\n        try:\n>           assert expect == self.mp.page_get_nickname()\nE           AssertionError: assert 'buyers' == 'buyer'\nE             - buyer\nE             + buyers\nE             ?      +\n\nscripts\\test01_mp_login.py:33: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <scripts.test01_mp_login.TestMpLogin object at 0x040D3748>, username = 'buyer', code = '123456', expect = 'buyers'\n\n    @pytest.mark.parametrize(\"username,code,expect\", read_yaml(\"mp_login.yaml\"))\n    def test_mp_login(self, username, code, expect):\n        # 调用登录方法\n        self.mp.page_mp_login(username, code)\n        # 断言\n        sleep(3)  # 解决 还未跳转到成功页面，获取昵称错误的问题\n        try:\n            assert expect == self.mp.page_get_nickname()\n        except Exception as e:\n            print(\"错误的原因：\", e)\n            #截图\n>           self.mp.base_get_image()\n\nscripts\\test01_mp_login.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\base.py:89: in base_get_image\n    self.__base_write_img(screen_path)\nbase\\base.py:96: in __base_write_img\n    allure.attach.file(f.read(),\"错误原因\",allure.attachment_type.PNG)\ne:\\users\\lxz\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\allure_commons\\_allure.py:182: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\ne:\\users\\lxz\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\ne:\\users\\lxz\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\ne:\\users\\lxz\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\pluggy\\manager.py:84: in <lambda>\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\ne:\\users\\lxz\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\allure_pytest\\listener.py:226: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\ne:\\users\\lxz\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\allure_commons\\reporter.py:113: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\ne:\\users\\lxz\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\ne:\\users\\lxz\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\ne:\\users\\lxz\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\pluggy\\manager.py:84: in <lambda>\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\ne:\\users\\lxz\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\allure_commons\\logger.py:53: in report_attached_file\n    shutil.copy2(source, destination)\ne:\\users\\lxz\\appdata\\local\\programs\\python\\python38-32\\lib\\shutil.py:432: in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\ne:\\users\\lxz\\appdata\\local\\programs\\python\\python38-32\\lib\\shutil.py:240: in copyfile\n    if _samefile(src, dst):\ne:\\users\\lxz\\appdata\\local\\programs\\python\\python38-32\\lib\\shutil.py:217: in _samefile\n    return os.path.samefile(src, dst)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nf1 = b'\\x89PNG\\r\\n\\x1a\\n\\x00\\x00\\x00\\rIHDR\\x00\\x00\\x07\\x80\\x00\\x00\\x03S\\x08\\x06\\x00\\x00\\x00OG\\x00T\\x00\\x00\\x00\\x01sRGB\\x00\\...$I\\x92$I\\x92$\\xa9\\x930\\x00\\x96$I\\x92$I\\x92$I\\x92\\xa4N\\xe2\\xff\\x03+\\xc6\\xf2\\xbe\"\\x91\\xf2Z\\x00\\x00\\x00\\x00IEND\\xaeB`\\x82'\nf2 = 'D:\\\\F盘的数据\\\\PycharmProjects\\\\import_project\\\\uiAutoTestBoke\\\\report\\\\e6b2374e-9a66-4d67-b203-75c78aa16718-attachment.png'\n\n    def samefile(f1, f2):\n        \"\"\"Test whether two pathnames reference the same actual file or directory\n    \n        This is determined by the device number and i-node number and\n        raises an exception if an os.stat() call on either pathname fails.\n        \"\"\"\n>       s1 = os.stat(f1)\nE       ValueError: stat: embedded null character in path\n\ne:\\users\\lxz\\appdata\\local\\programs\\python\\python38-32\\lib\\genericpath.py:100: ValueError"}, "attachments": [{"name": "错误原因", "source": "e6b2374e-9a66-4d67-b203-75c78aa16718-attachment.png", "type": "image/png"}, {"name": "log", "source": "ec663fe6-0756-4f1e-a6a6-290a7309c5fc-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "username", "value": "'buyer'"}, {"name": "code", "value": "'123456'"}, {"name": "expect", "value": "'buyers'"}], "start": 1616160994797, "stop": 1616160999645, "uuid": "139d7598-8d22-4202-bced-08b5d353345f", "historyId": "658d16c9db07f7f0b7280789818a8115", "testCaseId": "b1928a7174b0d14afd7479ec3844ea33", "fullName": "scripts.test01_mp_login.TestMpLogin#test_mp_login", "labels": [{"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test01_mp_login"}, {"name": "subSuite", "value": "TestMpLogin"}, {"name": "host", "value": "LAPTOP-PHNSP5RJ"}, {"name": "thread", "value": "14312-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test01_mp_login"}]}